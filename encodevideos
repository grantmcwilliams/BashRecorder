#!/bin/bash

# Locations
APPNAME=${0##*/}
CONFDIR="${HOME}/.bashcorder"
CONFFILE="${CONFDIR}/settings.conf"
ENCFILE="${CONFDIR}/encoded.log"
LOGFILE="${CONFDIR}/${APPNAME}.log"
DEPLIST="ffmpeg zenity md5sum"
TMPDIR=$(mktemp -d)

setup()
{
    for PROG in $DEPLIST ;do
        if ! which "$PROG" &> /dev/null ;then
            zenity --error --title="${APPNAME^}" --text="$PROG not installed - exiting" 2>/dev/null
            exit 1
        fi
    done

    # Source the settings.conf file
    if [[ -e "$CONFFILE" ]] ;then
        source "$CONFFILE"
    fi

	if [[ -f "$ENCFILE" ]] ;then
		touch "$ENCFILE"
	fi
}

cleanup()
{
	local RC="$1"
	rm -Rf "$TMPDIR"
	exit "$RC"
}

encodevideo()
{
    local VIDFILE="$1"
	local COUNT="$2"
    local TOTAL=$(ffprobe -v error -count_frames -select_streams v:0 -show_entries stream=nb_read_frames \
         -of default=nokey=1:noprint_wrappers=1 "$VIDFILE")

    if [[ -f "${VIDFILE%.*}-enc.avi" ]] ;then
    	rm -f "${VIDFILE%.*}-enc.avi"
    fi
	touch "${TMPDIR}/progress.txt"

    ffmpeg -i "$VIDFILE" -c:v "$VFCODEC" -preset "$VFPRESET" -crf "$VFQUAL" -acodec copy \
            -x264opts "keyint=${VKEYFRAMES}:min-keyint=${VKEYFRAMES}:scenecut=-1" -vstats_file "${TMPDIR}/progress.txt" "${TMPDIR}/${VIDFILE%.*}-tmp.avi" &> "${TMPDIR}/ffmpeg.txt" &
    FFRC="$?"

	if [[ ! "$FFRC" -eq '0' ]] ;then 
		return 1
	fi

	FFPID="$!"
    PERCENT="0"
    (
    	while [ -e "/proc/${FFPID}" ]; do
        	FRAME=$(grep '^frame=.*type=[[:space:]][a-Z]' "${TMPDIR}/progress.txt" | awk 'END{print $2}')
        	if [[ "${FRAME}" -gt "${TOTAL}" ]]; then
        		FRAME="${TOTAL}"
        	fi
        	PERCENT="$(( (FRAME * 100) /  TOTAL ))"
			echo "#  Encoding file $COUNT of $TOTALFILES"
        	echo "#  ${VIDFILE} - Encoding frame: $FRAME  "
        	echo "$PERCENT"
        	sleep 2
       	done
	) | zenity --progress --auto-close --width='400' --title="${APPNAME^}" --text="Encoding" --percentage=0 2>/dev/null
	if [[ $? -eq 1 ]];then
        zenity --question --title="${APPNAME^}" --text "Do you want to cancel encoding all videos? " --ok-label="Yes" --cancel-label="No" 2> /dev/null
        case $? in
                0) cleanup 0 ;;
               -1) echo "An unexpected error has occurred." ; return 1;;
        esac
        (
            while [ -e "/proc/${FFPID}" ]; do
                FRAME=$(grep '^frame=.*type=[[:space:]][a-Z]' "${TMPDIR}/progress.txt" | awk 'END{print $2}')
                if [[ "${FRAME}" -gt "${TOTAL}" ]]; then
                    FRAME="${TOTAL}"
                fi
                PERCENT="$(( (FRAME * 100) /  TOTAL ))"
                echo "#  Encoding file $COUNT of $TOTALFILES"
                echo "#  ${VIDFILE} - Encoding frame: $FRAME  "
                echo "$PERCENT"
            	sleep 2
            done
        ) | zenity --progress --auto-close --width='400' --title="${APPNAME^}" --text="Encoding" --percentage=0 2>/dev/null
    fi
    
    if mv -f "${TMPDIR}/${VIDFILE%.*}-tmp.avi" "$VIDFILE" ;then
		SUM=$(tail -c 1024 "${VIDFILE}" | md5sum | awk '{print $1}')
		echo "${VIDFILE}:${SUM}" >> "$ENCFILE"
	else
            zenity --error --title="${APPNAME^}" --text="Unable to move $VIDFILE - exiting" 2>/dev/null
            return 1
    fi
}

setup

if [[ -z "$1" ]] ;then
	echo "Must provide video files to encode"
	cleanup 1
fi

TOTALFILES="${#@}"
COUNTER='1'

for FILE in $(find "$@" -type f -iname "*${VIDTYPE}") ;do
	PRESUM=$(tail -c 1024 "${FILE}" | md5sum | awk '{print $1}')
	if ! grep -q "${PRESUM}" "$ENCFILE" ;then
		if ! encodevideo "$FILE" "$COUNTER" ;then
			cleanup 1
		fi
	fi
	(( COUNTER++ ))
done

zenity --info --title="${APPNAME}" --text "Encoding Complete" 2>/dev/null

cleanup

